// Mocks generated by Mockito 5.0.17 from annotations
// in mobile_buyer_guide/test/bloc_test/catalog_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dio/dio.dart' as _i2;
import 'package:mobile_buyer_guide/models/mobile.dart' as _i5;
import 'package:mobile_buyer_guide/models/mobile_image.dart' as _i6;
import 'package:mobile_buyer_guide/services/mobile_service.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeDio_0 extends _i1.Fake implements _i2.Dio {}

/// A class which mocks [MobileService].
///
/// See the documentation for Mockito's code generation for more information.
class MockMobileService extends _i1.Mock implements _i3.MobileService {
  MockMobileService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Dio get dio =>
      (super.noSuchMethod(Invocation.getter(#dio), returnValue: _FakeDio_0())
          as _i2.Dio);
  @override
  _i4.Future<List<_i5.Mobile>> getMobiles() =>
      (super.noSuchMethod(Invocation.method(#getMobiles, []),
              returnValue: Future<List<_i5.Mobile>>.value(<_i5.Mobile>[]))
          as _i4.Future<List<_i5.Mobile>>);
  @override
  _i4.Future<List<_i6.MobileImage>> getMobileImages(int? mobileId) =>
      (super.noSuchMethod(Invocation.method(#getMobileImages, [mobileId]),
              returnValue:
                  Future<List<_i6.MobileImage>>.value(<_i6.MobileImage>[]))
          as _i4.Future<List<_i6.MobileImage>>);
}
